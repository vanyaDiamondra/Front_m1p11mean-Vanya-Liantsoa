{"ast":null,"code":"import { baseurl } from './routeconfig';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeService {\n  constructor(http) {\n    this.http = http;\n  }\n  rdvEmploye() {\n    const token = window.localStorage.getItem('tokenuser');\n    return this.http.get(baseurl + '/employe/rdv?token=' + token).toPromise();\n  }\n  dailyTasks(date = undefined) {\n    const token = window.localStorage.getItem('tokenuser');\n    return this.http.get(baseurl + '/employe/tasks?token=' + token + \"&date=\" + date).toPromise();\n  }\n  doneDailyTasks(date = undefined) {\n    const token = window.localStorage.getItem('tokenuser');\n    return this.http.get(baseurl + '/employe/tasks/done?token=' + token + \"&date=\" + date).toPromise();\n  }\n  addTaskDone(_id) {\n    return this.http.get(baseurl + '/employe/tasks/setdone?_id=' + _id).toPromise();\n  }\n  rollBackTaskDone(_id) {\n    return this.http.get(baseurl + '/employe/tasks/rollbackdone?_id=' + _id).toPromise();\n  }\n  filterrdvEmploye(month) {\n    const token = window.localStorage.getItem('tokenuser');\n    if (month == 0) {\n      return this.http.get(baseurl + '/employe/rdv?token=' + token).toPromise();\n    } else {\n      return this.http.get(baseurl + '/employe/rdv?token=' + token + '&month=' + month).toPromise();\n    }\n  }\n  static #_ = this.ɵfac = function EmployeService_Factory(t) {\n    return new (t || EmployeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmployeService,\n    factory: EmployeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["baseurl","EmployeService","constructor","http","rdvEmploye","token","window","localStorage","getItem","get","toPromise","dailyTasks","date","undefined","doneDailyTasks","addTaskDone","_id","rollBackTaskDone","filterrdvEmploye","month","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\documents\\M1\\Web Avancée\\mean_beautysalon\\Front_m1p11mean-Vanya-Liantsoa\\src\\app\\services\\employe.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {baseurl} from './routeconfig';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  rdvEmploye(): Promise<any[]>  {\r\n    const token = window.localStorage.getItem('tokenuser');\r\n    return this.http.get<any[]>(baseurl + '/employe/rdv?token='+token).toPromise();\r\n  }\r\n\r\n  dailyTasks(date: string | undefined = undefined): Promise<any[]>  {\r\n    const token = window.localStorage.getItem('tokenuser');\r\n    return this.http.get<any[]>(baseurl + '/employe/tasks?token='+token+\"&date=\"+date).toPromise();\r\n  }\r\n\r\n  doneDailyTasks(date: string | undefined = undefined): Promise<any[]>  {\r\n    const token = window.localStorage.getItem('tokenuser');\r\n    return this.http.get<any[]>(baseurl + '/employe/tasks/done?token='+token+\"&date=\"+date).toPromise();\r\n  }\r\n\r\n  addTaskDone(_id: string): Promise<any[]>  {\r\n    return this.http.get<any[]>(baseurl + '/employe/tasks/setdone?_id='+_id).toPromise();\r\n  }\r\n\r\n  rollBackTaskDone(_id: string): Promise<any[]>  {\r\n    return this.http.get<any[]>(baseurl + '/employe/tasks/rollbackdone?_id='+_id).toPromise();\r\n  }\r\n\r\n  filterrdvEmploye(month: number): Promise<any[]>  {\r\n    const token = window.localStorage.getItem('tokenuser');\r\n    if( month == 0 ) {\r\n      return this.http.get<any[]>(baseurl + '/employe/rdv?token='+token).toPromise();\r\n    } else{\r\n      return this.http.get<any[]>(baseurl + '/employe/rdv?token='+token+'&month='+month).toPromise();\r\n    }\r\n  }\r\n\r\n}\r\n"],"mappings":"AAEA,SAAQA,OAAO,QAAO,eAAe;;;AAKrC,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,UAAUA,CAAA;IACR,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACtD,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAQT,OAAO,GAAG,qBAAqB,GAACK,KAAK,CAAC,CAACK,SAAS,EAAE;EAChF;EAEAC,UAAUA,CAACC,IAAA,GAA2BC,SAAS;IAC7C,MAAMR,KAAK,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACtD,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAQT,OAAO,GAAG,uBAAuB,GAACK,KAAK,GAAC,QAAQ,GAACO,IAAI,CAAC,CAACF,SAAS,EAAE;EAChG;EAEAI,cAAcA,CAACF,IAAA,GAA2BC,SAAS;IACjD,MAAMR,KAAK,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACtD,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAQT,OAAO,GAAG,4BAA4B,GAACK,KAAK,GAAC,QAAQ,GAACO,IAAI,CAAC,CAACF,SAAS,EAAE;EACrG;EAEAK,WAAWA,CAACC,GAAW;IACrB,OAAO,IAAI,CAACb,IAAI,CAACM,GAAG,CAAQT,OAAO,GAAG,6BAA6B,GAACgB,GAAG,CAAC,CAACN,SAAS,EAAE;EACtF;EAEAO,gBAAgBA,CAACD,GAAW;IAC1B,OAAO,IAAI,CAACb,IAAI,CAACM,GAAG,CAAQT,OAAO,GAAG,kCAAkC,GAACgB,GAAG,CAAC,CAACN,SAAS,EAAE;EAC3F;EAEAQ,gBAAgBA,CAACC,KAAa;IAC5B,MAAMd,KAAK,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACtD,IAAIW,KAAK,IAAI,CAAC,EAAG;MACf,OAAO,IAAI,CAAChB,IAAI,CAACM,GAAG,CAAQT,OAAO,GAAG,qBAAqB,GAACK,KAAK,CAAC,CAACK,SAAS,EAAE;IAChF,CAAC,MAAK;MACJ,OAAO,IAAI,CAACP,IAAI,CAACM,GAAG,CAAQT,OAAO,GAAG,qBAAqB,GAACK,KAAK,GAAC,SAAS,GAACc,KAAK,CAAC,CAACT,SAAS,EAAE;IAChG;EACF;EAAC,QAAAU,CAAA,G;qBAlCUnB,cAAc,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdxB,cAAc;IAAAyB,OAAA,EAAdzB,cAAc,CAAA0B,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}