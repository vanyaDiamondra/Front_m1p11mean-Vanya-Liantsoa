{"ast":null,"code":"import _asyncToGenerator from \"D:/documents/M1/Web Avanc\\xE9e/mean_beautysalon/Front_m1p11mean-Vanya-Liantsoa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { baseurl } from './routeconfig';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class UserService {\n  login(user) {\n    return this.http.post(baseurl + '/user/login', user);\n  }\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n  }\n  getServices() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const result = yield _this.http.get(baseurl + '/service').toPromise();\n        if (result !== undefined) {\n          return result;\n        } else {\n          throw new Error('Donnée non définie');\n        }\n      } catch (error) {\n        console.error('Erreur:', error);\n        throw error;\n      }\n    })();\n  }\n  seeProfil(token) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const result = yield _this2.http.get(baseurl + '/token?token=' + token).toPromise();\n      if (result !== undefined) {\n        return result;\n      }\n      return [];\n    })();\n  }\n  inscription(user) {\n    return this.http.post(baseurl + '/user/inscription', user);\n  }\n  getUserInfo() {\n    const token = window.localStorage.getItem('tokenuser');\n    return this.http.get(baseurl + '/user/info?token=' + token).toPromise();\n  }\n  updateUserInfo(data) {\n    return this.http.post(baseurl + '/user/updateprofil', data);\n  }\n  updatePic(data) {\n    return this.http.post(baseurl + '/user/updatepic', data);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["baseurl","UserService","login","user","http","post","constructor","router","getServices","_this","_asyncToGenerator","result","get","toPromise","undefined","Error","error","console","seeProfil","token","_this2","inscription","getUserInfo","window","localStorage","getItem","updateUserInfo","data","updatePic","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["D:\\documents\\M1\\Web Avancée\\mean_beautysalon\\Front_m1p11mean-Vanya-Liantsoa\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {baseurl} from './routeconfig';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class UserService {\r\n\r\n  login(user: any): Observable<any> {\r\n    return this.http.post(baseurl+'/user/login', user);\r\n  }\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  async getServices(): Promise<any[]> {\r\n    try {\r\n      const result = await this.http.get<any>(baseurl + '/service').toPromise();\r\n      if (result !== undefined) {\r\n          return result;\r\n      } else {\r\n          throw new Error('Donnée non définie');\r\n      }\r\n    } catch (error) {\r\n        console.error('Erreur:', error);\r\n        throw error;\r\n    }\r\n  }\r\n\r\n\r\n  async seeProfil(token: string | null): Promise<any[]> {\r\n    const result = await this.http.get<any[]>(baseurl + '/token?token='+token).toPromise();\r\n    if (result !== undefined) {\r\n      return result;\r\n    }\r\n    return [];  \r\n  }\r\n\r\n  inscription(user: any):Observable<any> {\r\n    return this.http.post(baseurl+'/user/inscription', user);\r\n  }\r\n  getUserInfo():Promise<any> {\r\n    const token = window.localStorage.getItem('tokenuser');\r\n    return this.http.get<any>(baseurl + '/user/info?token='+token).toPromise();\r\n  }\r\n\r\n  updateUserInfo(data :any) :Observable<any> {\r\n    return this.http.post(baseurl+'/user/updateprofil', data);\r\n  }\r\n\r\n  updatePic(data :any) :Observable<any> {\r\n    return this.http.post(baseurl+'/user/updatepic', data);\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"],"mappings":";AAIA,SAAQA,OAAO,QAAO,eAAe;;;;AAOrC,OAAM,MAAOC,WAAW;EAEtBC,KAAKA,CAACC,IAAS;IACb,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAACL,OAAO,GAAC,aAAa,EAAEG,IAAI,CAAC;EACpD;EAEAG,YAAoBF,IAAgB,EAAUG,MAAc;IAAxC,KAAAH,IAAI,GAAJA,IAAI;IAAsB,KAAAG,MAAM,GAANA,MAAM;EAAY;EAE1DC,WAAWA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACf,IAAI;QACF,MAAMC,MAAM,SAASF,KAAI,CAACL,IAAI,CAACQ,GAAG,CAAMZ,OAAO,GAAG,UAAU,CAAC,CAACa,SAAS,EAAE;QACzE,IAAIF,MAAM,KAAKG,SAAS,EAAE;UACtB,OAAOH,MAAM;QACjB,CAAC,MAAM;UACH,MAAM,IAAII,KAAK,CAAC,oBAAoB,CAAC;QACzC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/B,MAAMA,KAAK;MACf;IAAC;EACH;EAGME,SAASA,CAACC,KAAoB;IAAA,IAAAC,MAAA;IAAA,OAAAV,iBAAA;MAClC,MAAMC,MAAM,SAASS,MAAI,CAAChB,IAAI,CAACQ,GAAG,CAAQZ,OAAO,GAAG,eAAe,GAACmB,KAAK,CAAC,CAACN,SAAS,EAAE;MACtF,IAAIF,MAAM,KAAKG,SAAS,EAAE;QACxB,OAAOH,MAAM;MACf;MACA,OAAO,EAAE;IAAC;EACZ;EAEAU,WAAWA,CAAClB,IAAS;IACnB,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAACL,OAAO,GAAC,mBAAmB,EAAEG,IAAI,CAAC;EAC1D;EACAmB,WAAWA,CAAA;IACT,MAAMH,KAAK,GAAGI,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACtD,OAAO,IAAI,CAACrB,IAAI,CAACQ,GAAG,CAAMZ,OAAO,GAAG,mBAAmB,GAACmB,KAAK,CAAC,CAACN,SAAS,EAAE;EAC5E;EAEAa,cAAcA,CAACC,IAAS;IACtB,OAAO,IAAI,CAACvB,IAAI,CAACC,IAAI,CAACL,OAAO,GAAC,oBAAoB,EAAE2B,IAAI,CAAC;EAC3D;EAEAC,SAASA,CAACD,IAAS;IACjB,OAAO,IAAI,CAACvB,IAAI,CAACC,IAAI,CAACL,OAAO,GAAC,iBAAiB,EAAE2B,IAAI,CAAC;EACxD;EAAC,QAAAE,CAAA,G;qBA7CU5B,WAAW,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXnC,WAAW;IAAAoC,OAAA,EAAXpC,WAAW,CAAAqC,IAAA;IAAAC,UAAA,EAJV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}